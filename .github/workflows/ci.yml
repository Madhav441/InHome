name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  typescript:
    name: TypeScript Workspace
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build TypeScript workspace
        run: npm run build

      - name: Run smoke scenarios
        run: npm run smoke

      - name: Run secret-backed smoke tests
        if: ${{ secrets.INHOME_APNS_KEY_PEM && secrets.INHOME_FCM_SERVICE_ACCOUNT_JSON && secrets.INHOME_WINDOWS_CERT_PFX_BASE64 && secrets.INHOME_WINDOWS_CERT_PASSWORD }}
        env:
          APNS_KEY_PEM: ${{ secrets.INHOME_APNS_KEY_PEM }}
          FCM_SERVICE_ACCOUNT_JSON: ${{ secrets.INHOME_FCM_SERVICE_ACCOUNT_JSON }}
          WINDOWS_CERT_PFX_BASE64: ${{ secrets.INHOME_WINDOWS_CERT_PFX_BASE64 }}
          WINDOWS_CERT_PASSWORD: ${{ secrets.INHOME_WINDOWS_CERT_PASSWORD }}
        run: npm run smoke:secrets

  go-agent:
    name: Go Desktop Agent
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.20.x"

      - name: Run Go tests
        working-directory: agents/desktop
        run: go test ./...

      - name: Vet Go packages
        working-directory: agents/desktop
        run: go vet ./...

      - name: Build Go agent
        working-directory: agents/desktop
        run: go build ./...
